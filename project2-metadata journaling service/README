Noah Hoss
Richard Gonzalez

Getting different output with SAME code between Pyrite and my provided VM, not sure why, 
Also getting different output when giving program different number of processing cores to work with?:

4 CORE OUTPUT(this is super weird because it prints after the buffer is full which doesn't make sense.):
Thread 1 processing 8 0 0
Thread 1 processing 7 1 0
Thread 1 processing 6 2 0
Thread 1 processing 5 3 0
Thread 1 processing 4 4 0
Thread 1 processing 3 5 0
Thread 1 processing 2 6 0
Thread 1 processing 1 7 0
*Thread stuck because Meta Data buffer is full* 0, 7, 0
Thread 1 processing 2 8 0
*Thread stuck because Meta Data buffer is full* 1, 8, 0
Thread 2 processing 1 8 0
Blocking thread by sleeping for 1s
Thread 2 processing 1 7 1
Thread 3 processing 1 6 1
--test write complete--
Thread 3 processing 1 6 1
--test write complete--
Thread 2 processing 1 6 0
Thread 3 processing 1 5 1
--test write complete--
Thread 2 processing 1 5 0
Thread 3 processing 1 4 1
--test write complete--
Thread 2 processing 1 4 0
Thread 1 processing 1 4 0
Thread 3 processing 0 5 1
--test write complete--
Thread 2 processing 0 5 0
Thread 3 processing 0 4 1
--test write complete--
Thread 2 processing 0 4 0
Thread 3 processing 0 3 1
--test write complete--
Thread 2 processing 0 3 0
Thread 3 processing 0 2 1
--test write complete--
Thread 2 processing 0 2 0
Thread 3 processing 0 1 1
--test write complete--
Thread 2 processing 0 1 0
Thread 3 processing 0 0 1
--test write complete--

1 CORE OUTPUT():
Thread 1 processing 8 0 0
Thread 1 processing 8 1 0
Thread 2 processing 8 1 0
Blocking thread by sleeping for 1s
Thread 3 processing 8 0 1
--test write complete--
Thread 1 processing 8 1 0
Thread 1 processing 7 2 0
Thread 1 processing 6 3 0
Thread 1 processing 5 4 0
Thread 1 processing 4 5 0
Thread 1 processing 3 6 0
Thread 1 processing 2 7 0
*Thread stuck because Meta Data buffer is full* 1, 7, 0
Thread 2 processing 1 7 0
Thread 2 processing 1 6 1
Thread 2 processing 1 5 2
Thread 2 processing 1 4 3
Thread 3 processing 1 3 3
--test write complete--
Thread 3 processing 1 3 2
--test write complete--
Thread 3 processing 1 3 1
--test write complete--
Thread 1 processing 1 4 0
Thread 3 processing 0 5 1
--test write complete--
Thread 2 processing 0 5 0
Thread 3 processing 0 4 1
--test write complete--
Thread 2 processing 0 4 0
Thread 3 processing 0 3 1
--test write complete--
Thread 2 processing 0 3 0
Thread 3 processing 0 2 1
--test write complete--
Thread 2 processing 0 2 0
Thread 3 processing 0 1 1
--test write complete--
Thread 2 processing 0 1 0
Thread 3 processing 0 0 1
--test write complete--



------------------------------------------------------
As shown above the output is wildly different when given different amounts of processing cores?
Also, Jahid Hasan ran the code on pyrite and got an output that seems pretty good as well, but different still?(Hi if you're grading this Jahid!)